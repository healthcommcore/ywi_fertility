# Language File (English)
#
# @package     Sourcerer
# @version     2.7.0
#
# @author      Peter van Westen <peter@nonumber.nl>
# @link        http://www.nonumber.nl
# @copyright   Copyright (C) 2010 NoNumber! All Rights Reserved
# @license     http://www.gnu.org/licenses/gpl-2.0.html GNU/GPL
# @translation Peter van Westen <peter@nonumber.nl> NoNumber!

SOURCERER=Sourcerer
SOURCERER_DESC=<strong>Sourcerer</strong> - place any code in Joomla!
SOURCERER_DESC_LONG=<p>The Sourcerer plugin handles all the Sourcerer syntax tags in your site.</p><p>You can place your html, javascript, css and php code (including there own tags) inside the Sourcerer tags:<br /><span style="color:green">{source}<span style="color:blue">Your code</span>{/source}</span></p><p>Sourcerer reads all the code and strips it from all html markup. So giving code colors and such is no problem.<br />If you want to use Sourcerer code somewhere else than in an editor (like through ReReplacer), you probably don\'t want html cleaned. You can do that like this:<br /><span style="color:green">{source 0}<span style="color:blue">Your non-HTML code</span>{/source}</span></p>

SRC_NONUMBER_ELEMENTS_PLUGIN_NOT_INSTALLED=NoNumber! Elements plugin is not installed. Sourcerer cannot function.

# Parameters
SRC_SYNTAX_WORD=Sourcerer tag word
SRC_SYNTAX_WORD_DESC=This defines the word to use as the Sourcerer syntax tag.<br /><br />Default is 'source'. Which means the tags to use are:<pre>{source}...{/source}</pre>
SRC_ENABLE_PHP_DEBUGGING=Enable PHP Debugging
SRC_ENABLE_PHP_DEBUGGING_DESC=If enabled, Sourcerer will give an a PHP Debugging error table if you have errors in the PHP code.<br />This can only be seen on the frontend if you are logged in as (Super) Administrator.

SRC_SECURITY_SETTINGS_DEFAULT=Security Settings - Default
SRC_SECURITY_SETTINGS_DEFAULT_DESC=Here you can set what kind of code can be used within the Sourcerer tags. All code that is not permitted will be stripped away. For more precise settings, see the Advanced Security settings.

SRC_ALLOW_CSS_TAGS=Allow CSS tags
SRC_ALLOW_CSS_TAGS_DESC=If enabled, CSS (style & link) tags are permitted within the Sourcerer tags. Otherwise the CSS tags (and the CSS code within) will be stripped.
SRC_ALLOW_JAVASCRIPT_TAGS=Allow JavaScript tags
SRC_ALLOW_JAVASCRIPT_TAGS_DESC=If enabled, JavaScript (script) tags are permitted within the Sourcerer tags. Otherwise the JavaScript tags (and the JavaScript code within) will be stripped.
SRC_ALLOW_PHP_TAGS=Allow PHP tags
SRC_ALLOW_PHP_TAGS_DESC=If enabled, PHP tags are permitted within the Sourcerer tags. Otherwise the PHP tags (and the PHP code within) will be stripped.
SRC_FORBIDDEN_PHP_FUNCTIONS=Forbidden PHP functions
SRC_FORBIDDEN_PHP_FUNCTIONS_DESC=A comma separated list of PHP functions that are forbidden. The whole PHP block of code will not be executed if it contains any of these functions.
SRC_FORBIDDEN_HTML_TAGS=Forbidden (HTML) Tags
SRC_FORBIDDEN_HTML_TAGS_DESC=A comma separated list of tags that are forbidden. These tags will be stripped, and also any code in between double tags.

SRC_EXTRA_FORBIDDEN_PHP_FUNCTIONS=Extra Forbidden PHP functions
SRC_EXTRA_FORBIDDEN_PHP_FUNCTIONS_DESC=A comma separated list of PHP functions to add to the forbidden list (see Default settings)
SRC_EXTRA_FORBIDDEN_HTML_TAGS=Extra Forbidden (HTML) Tags
SRC_EXTRA_FORBIDDEN_HTML_TAGS_DESC=A comma separated list of tags to add to the forbidden list (see Default settings)

SRC_SECURITY_SETTINGS_ARTICLES=Security Settings - Articles
SRC_SECURITY_SETTINGS_ARTICLES_DESC=These settings have effect on Articles, Categories and Sections.<br />The security settings only have effect on articles.
SRC_ENABLE_IN_ARTICLES=Enable in articles
SRC_ENABLE_IN_ARTICLES_DESC=Select whether to enable the use of the syntax in articles.
SRC_SECURITY_LEVEL=Security Level
SRC_SECURITY_LEVEL_DESC=Set the level of security. Sourcerer tags will be stripped from articles with an owner (creator) below this group level.
SRC_CSS_SECURITY_LEVEL=CSS Security Level
SRC_CSS_SECURITY_LEVEL_DESC=Set the level of security. CSS tags (and the CSS code within) will be stripped from articles with an owner (creator) below this group level. If the overall security level is set higher, it will overrule this.
SRC_JAVASCRIPT_SECURITY_LEVEL=JavaScript Security Level
SRC_JAVASCRIPT_SECURITY_LEVEL_DESC=Set the level of security. JavaScript tags (and the JavaScript code within) will be stripped from articles with an owner (creator) below this group level. If the overall security level is set higher, it will overrule this.
SRC_PHP_SECURITY_LEVEL=PHP Security Level
SRC_PHP_SECURITY_LEVEL_DESC=Set the level of security. PHP tags (and the PHP code within) will be stripped from articles with an owner (creator) below this group level. If the overall security level is set higher, it will overrule this.

SRC_SECURITY_SETTINGS_COMPONENTS=Security Settings - Components
SRC_SECURITY_SETTINGS_COMPONENTS_DESC=These settings have effect on the component area.<br />You can select in which components Sourcerer should not be enabled. Advise is to not allow Sourcerer in components that non-backend users can post content in.
SRC_ENABLE_IN_COMPONENTS=Enable in components
SRC_ENABLE_IN_COMPONENTS_DESC=Select whether to enable the use of the syntax in components.
SRC_DISABLE_ON_COMPONENTS=Disable on Components
SRC_DISABLE_ON_COMPONENTS_DESC=Select which components NOT to enable Sourcerer in. This is a list of your installed frontend components.

SRC_SECURITY_SETTINGS_OTHER_AREAS=Security Settings - Other Areas
SRC_SECURITY_SETTINGS_OTHER_AREAS_DESC=These settings have effect on the areas outside the component area (so in Modules and the rest of the website).
SRC_ENABLE_OTHER_AREAS=Enable other areas
SRC_ENABLE_OTHER_AREAS_DESC=Select whether to enable the use of the syntax in all remaining areas, like the modules and the document head.

SRC_SHOW_WIZARD=Show Wizard